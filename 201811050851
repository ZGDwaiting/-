数的合并
#include <stdio.h>
int fun(int a,int b)
{
int c=1000*(a%10)+100*(b%10)+10*(a/10)+(b/10);
return c;
}
int main() {
int a;
int b;
printf("请输入两个两位数:");
scanf("%d %d",&a,&b);
int c=fun(a,b);
printf("合并后的数为:%d",c);
return 0;
}

#include <stdio.h>
int fun(int a,int b)
{
	int c;
	c=a/10*10+a%10*1000+b/10+b%10*100;
	return c;
}
int main()
{
	int m,n,c;
	scanf("%d%d",&m,&n);
	c=fun(m,n);
	printf("%d",c);
}

#include "stdio.h"
void NONO();
  void fun(int a, int b, long *c)     
{ 
    *c=a/10%10*10+a%10*1000+b/10+b%10*100;
   }    
int main()     
{   
  int a,b;
  long c;     
  printf("Input a, b:"); 
  scanf("%d%d", &a, &b);  
  fun(a, b, &c);     
  printf("The result is: %ld\n", c);   
}

猴子选大王
#include<stdio.h>
#include<string.h>

int main()
{
    int N,M;
    scanf("%d%d",&N,&M);
    int a[N],i=0;
    while(i<N){a[i]=i+1;i++;}
    int co=0,z=0;
    i=0;
    do
    {
        for(i=0;i<N;i++)
        {
            if(a[i]!=0)
            {
                co++;
                if(co==M){a[i]=0;z++;co=0;if(z==N-1)break;}
            }
        }
    }while(z!=N-1);
    for(i=0;i<N;i++)
    {
        if(a[i]!=0)printf("%d",a[i]);
    }
    return 0;
}

#include <iostream>    
using namespace std;
struct monkey                
{
	int num;                   
	monkey* next;            
};
monkey* head, * tail;           
void creat(int M)             
{                              
	int i;                           
	monkey* p, * q;              
	p = new monkey;            
	p->num = 1;                  
	p->next = NULL;             
	head = p;                  
	q = p;                      
	for (i = 2; i <= M; i = i + 1)       
	{
		p = new monkey;        
		p->num = i;           
		q->next = p;           
		q = p;                  
		p->next = NULL;        
	}
	tail = q;                  
	tail->next = head;     
}
void fun(int N)
{                        
	int x = 0;            
	monkey* p, * q;       
	q = tail;               
	do                   
	{
		p = q->next;       
		x = x + 1;          
		if (x % N == 0)    
		{
			cout << p->num << "  ";
			q->next = p->next;         
			delete p;              
			p = NULL;
		}
		else
			q = p;                 
	} while (q != q->next);         
	head = q;                       
}                                 
int main()                        
{
	int n, m;                    
	head = NULL;                   
	cout<<"请输入猴子个数m和报数n : (m>n)"<<endl;
	cin>>m>>n;                   
	creat(m);                                
	cout << "the" << "  " << head->num << "  " << "is monkey king" << endl;    
	delete head;              
	return 0;
}

奖学金
#include<stdio.h>
#include<algorithm>
using namespace std;
struct node
{
   int a,b,c; 
   int num,sum;   
}student[3000];
int cmp(node x,node y)
{
    if(x.sum!=y.sum) return x.sum>y.sum;
    if(x.a!=y.a) return x.a>y.a;
    if(x.num!=y.num) return x.num<y.num;
}
int main()
{
    int i,j,n,m;
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
      scanf("%d%d%d",&student[i].a,&student[i].b,&student[i].c);
      student[i].num=i+1;
      student[i].sum=student[i].a+student[i].b+student[i].c;
    }
    sort(student,student+n,cmp);
    for(i=0;i<5;i++)
    printf("%d %d\n",student[i].num,student[i].sum);
    while(1);
    return 0;
}

字符串
#include<iostream>
using namespace std;
int main() {
    int r, c,x,y=0;
	int i=0,j=0;
    char grid[50][51],hrid[50][51];
    cin >> r>>c ;
    for ( i = 0; i < c; i++)
        cin >> grid[i];
	cin>>x;
	   for (i = 0; i < c; i++)
    {
        for ( j = 0; j < r; j++)
        hrid[i][j]=grid[i][j];
    }
    
	   for(y=0;y<x;y++)
	{
   for (i = 0; i < c; i++)
   {     for(j=0;j<r;j++)
                
   {           if(grid[i][j]=='X')
   {             hrid[i-1][j]='X';
                 hrid[i][j-1]='X';
				 hrid[i][j+1]='X';
                 hrid[i+1][j]='X';
			if(grid[i-1][j]=='P')
				 hrid[i-1][j]='P';
			if(grid[i][j-1]=='P')
				 hrid[i][j-1]='P';
			if(grid[i][j+1]=='P')
                 hrid[i][j+1]='P';
            if(grid[i+1][j]=='P')
				hrid[i+1][j]='P';


   }
   }
   }

   	   for (i = 0; i < c; i++)
    {
        for ( j = 0; j < r; j++)
        grid[i][j]=hrid[i][j];
    }
	}
       for (i = 0; i < c; i++)
    {
        for ( j = 0; j < r; j++)
        cout<<hrid[i][j];
		cout<<endl;
    }
    return 1;
 
}

计算器
#include "iostream"
#include <stack>
 
using namespace std;
 
int Priority(char ch)
{
    switch(ch)
    {
        case '(':
            return 3;
        case '*':
        case '/':
            return 2;
        case '+':
        case '-':
            return 1;
        default:
            return 0;
    }
}
 
int main()
{
    stack<char> s_opt;
    stack<int> s_num;
    char opt[1024] = {0};
    int i = 0, tmp = 0, num1 = 0, num2 = 0;
 
    cout << "Please input: " << endl;
    cin >> opt;
 
    while(opt[i] != '\0' || s_opt.empty() != true)
    {
    if(opt[i] >= '0' && opt[i] <= '9')
    {
        tmp = tmp * 10 + opt[i] - '0';
        i++;
        if(opt[i] > '9' || opt[i] < '0')
        {
            s_num.push(tmp);
            tmp = 0;
 
        }    
    }
        else
        {
            if((opt[i] == ')') && (s_opt.top() == '('))
            {
                s_opt.pop();
                i++;
                continue;
            }
            
            if((s_opt.empty()) == true || (Priority(opt[i]) > Priority(s_opt.top())) ||
              (s_opt.top() == '(' && (opt[i] != ')')))
            {
                s_opt.push( opt[i]);
                i++;
                continue;
            }
    
            if( ((opt[i] == '\0') &&( s_opt.empty() != true)) || ( (opt[i] == ')') && (s_opt.top() != '(') )||
                (Priority(opt[i]) <= Priority(s_opt.top()))    )
            {
                char ch = s_opt.top();
                s_opt.pop();
                int num1,num2;
                switch(ch)
                {
                    case'+':
                        num1 = s_num.top();
                        s_num.pop();
                        num2 = s_num.top();
                        s_num.pop();
                        s_num.push(num1 + num2);
                        break;
 
                    case'-':
                        num1 = s_num.top();
                        s_num.pop();
                        num2 = s_num.top();
                        s_num.pop();
                        s_num.push(num1 - num2);
                    break;    
                    case'*':
                        num1 = s_num.top();
                        s_num.pop();
                        num2 = s_num.top();
                        s_num.pop();
                        s_num.push(num1 * num2);
                    break;    
                    case'/':
                        num1 = s_num.top();
                        s_num.pop();
                        num2 = s_num.top();
                        s_num.pop();
                        s_num.push(num1 / num2);
                    break;    
                }
            }    
        }
    }
    
    cout << s_num.top() << endl;
 
    return 0;
 
 
}

面向对象问题
#include<iostream> 
#include <math.h> 
using namespace std; 
class vehicle 
{ 
protected: 
int wheels; 
int weight; 
public: 
vehicle(int wh, int we) 
{ 
wheels = wh; 
weight = we; 
} 
void disp() 
{ 
cout << "wheels=" << wheels << ",weight=" << weight << endl; 
} 
}; 
class car:private vehicle 
{ 
int passenger_load; 
public: 
car(int wh, int we, int pa) :vehicle(wh,we) 
{ 
passenger_load = pa; 
} 
void disp() 
{ 
vehicle::disp(); 
cout << "passenger_load=" << passenger_load << endl; 
} 
}; 
class truck :private vehicle 
{ 
int passenger_load; 
int payload; 
public: 
truck(int wh, int we, int pa,int pay) :vehicle(wh, we) 
{ 
passenger_load = pa; 
payload = pay; 
} 
void disp() 
{ 
vehicle::disp(); 
cout << "passenger_load=" << passenger_load << "payload=" << payload << endl; 
} 
}; 
int main() 
{ 
vehicle v(100, 99); 
v.disp(); 
car c(50, 40, 30); 
c.disp(); 
truck t(20, 15, 10, 5); 
t.disp(); 
system("pause"); 
} 
